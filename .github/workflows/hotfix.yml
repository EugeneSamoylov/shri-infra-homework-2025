name: Hotfix

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to fix (e.g. 5)'
        required: true

jobs:
  hotfix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Checkout release branch
        run: |
          git fetch origin
          git checkout releases/${{ github.event.inputs.version }}

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Get hotfix number
        id: hotfix
        run: echo "number=${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Login to Yandex Container Registry
        run: |
          echo ${{ secrets.YC_OAUTH_TOKEN }} | docker login \
            --username oauth \
            --password-stdin \
            cr.yandex

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_fix${{ steps.hotfix.outputs.number }}
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest

      - name: Create hotfix tag
        run: |
          git tag v${{ github.event.inputs.version }}_fix${{ steps.hotfix.outputs.number }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git v${{ github.event.inputs.version }}_fix${{ steps.hotfix.outputs.number }}

      - name: Add comment to release issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          HOTFIX_NUMBER=${{ steps.hotfix.outputs.number }}
          VERSION=${{ github.event.inputs.version }}
          DATE=$(date +%Y-%m-%d)
          AUTHOR=${{ github.actor }}
          IMAGE="cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${VERSION}_fix${HOTFIX_NUMBER}"
          
          # Получаем номер issue (предполагаем, что issue называется "Release VERSION")
          ISSUE_NUMBER=$(gh issue list --state open --search "Release $VERSION" --json number -q '.[0].number')
          
          # Формируем комментарий
          COMMENT="**Hotfix applied**\n- Date: $DATE\n- Author: $AUTHOR\n- Docker Image: $IMAGE"
          
          # Добавляем комментарий
          gh issue comment $ISSUE_NUMBER --body "$COMMENT"